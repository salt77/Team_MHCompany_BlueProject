#ifndef __Engine_Enum_H__
#define __Engine_Enum_H__

namespace Engine
{
	enum class E_WINMODE		{ MODE_FULL, MODE_WIN };

	enum class E_BUFFERID		{ BUFFER_TRICOL, BUFFER_RCTEX, BUFFER_TERRAINTEX, BUFFER_CUBETEX, BUFFER_END };

	enum class E_INFO			{ INFO_RIGHT, INFO_UP, INFO_LOOK, INFO_POS, INFO_END };
	enum class E_ROTATION		{ ROT_X, ROT_Y, ROT_Z, ROT_END };
	enum class E_POSITION		{ POS_X, POS_Y, POS_Z, POS_END };
	enum class E_SCALE			{ SCALE_X, SCALE_Y, SCALE_Z, SCALE_END};

	enum class E_TEXTURE_TYPE	{ TEX_NORMAL, TEX_CUBE, TEX_END };

	enum class E_RENDER_ID		{ RENDER_PRIORITY, RENDER_NONALPHA, RENDER_ALPHA, RENDER_BILLBOARD, RENDER_UI, RENDER_SHADOW, RENDER_END };

	enum class E_MOUSEKEYSTATE	{ DIM_LB, DIM_RB, DIM_MB, DIM_END };
	enum class E_MOUSEMOVESTATE { DIMS_X, DIMS_Y, DIMS_Z, DIMS_END };

	enum class E_MESH_TYPE		{ MESH_STATIC, MESH_DYNAMIC, MESH_NAVI, MESH_END };

	enum class E_NAVI_POINT		{ POINT_START, POINT_FINISH, POINT_END };
	enum class E_COMPARE		{ COMPARE_LEFT, COMPARE_RIGHT };

	enum class E_EASE 
	{ 
		InSine			, OutSine		, InOutSine, 
		InCubic			, OutCubic		, InOutCubic,
		InQuint			, OutQuint		, InOutQuint,
		InCirc			, OutCirc		, InOutCirc,
		InElastic		, OutElastic	, InOutElastic,
		InQuad			, OutQuad		, InOutQuad,
		InQuart			, OutQuart		, InOutQuart,
		InExpo			, OutExpo		, InOutExpo,
		InBack			, OutBack		, InOutBack,
		InBounce		, OutBounce		, InOutBounce
	};

	enum class E_LAYERTAG
	{
		Environment, GameLogic, UI, Map,
		TAG_END
	};

	enum class E_OBJTAG
	{
		OBJ_BackGround,
<<<<<<< HEAD
		OBJ_Player, OBJ_DynamicCamera, OBJ_UI,
		OBJ_Test, OBJ_Map,
		OBJ_END = INT_MAX
=======
		OBJ_Player, OBJ_DynamicCamera, OBJ_UI, OBJ_VoaPicker,
		OBJ_Test, OBJ_Map,
		OBJ_END
>>>>>>> Branch_Merge00
	};

	enum class E_SCENETAG
	{
		Scene_LoadingScene,
		Scene_Logo, Scene_Lobby, Scene_Lobby2,
		Scene_END
	};

	enum class E_COLTAG
	{
		COL_SPHERE, 
		COL_END
	};

	enum class E_RGB { RGB_R, RGB_G, RGB_B, RGB_END};

	enum class E_FontStyle { };

	enum class E_Alignment_Vert { Align_Left, Align_Center_Vert, Align_Right };
	enum class E_Alignment_Hori { Align_Top, Align_Center_Hori, Align_Bottom };

	//////////////////////////////////////////////////// 캐릭터 구조체에 들어갈 데이터들 
	// 첫 번째 시트 Data 값 
	enum class E_CHAR_NAME
	{
		Name_Neru, Name_Nonomi, Name_Mashiro, Name_Maki, Name_Mutsuki, Name_Saya, Name_Serina, Name_Serika, Name_Shun,
		Name_Sumire, Name_Suzumi, Name_Shiroko, Name_Shimiko, Name_Shizuko, Name_Aru, Name_Asuna, Name_Ayane, Name_Airi,
		Name_Izuna, Name_Akane, Name_Akari, Name_Eimi, Name_Yoshimi, Name_Utaha, Name_Yuuka, Name_Iori, Name_Izumi,
		Name_Juri, Name_Zunko, Name_Tsurugi, Name_Tsubaki, Name_Chinatsu, Name_Chise, Name_Karin, Name_Kayoko, Name_Kotama,
		Name_Kotori, Name_Pina, Name_Hanae, Name_Hare, Name_Haruna, Name_Haruka, Name_Hasumi, Name_Hoshino, Name_Fuuka,
		Name_Hina, Name_Hibiki, Name_Hihumi,
		Name_End
	};
	enum class E_CHAR_LANG
	{
		LANG_KOR, LANG_ENG, 
		LANG_END
	};
	enum class E_CHAR_STAR
	{
		STAR_NULL, STAR_1, STAR_2, STAR_3,
		STAR_END
	};
	enum class E_CHAR_COMBATTYPE
	{
		COMBATTYPE_NULL, COMBATTYPE_STRIKER, COMBATTYPE_SPECIAL,
		COMBATTYPE_END
	};
	enum class E_CHAR_ROLE
	{
		ROLL_NULL, ROLE_TANKER, ROLE_DEALER, ROLE_HEALER, ROLE_SUPPORTER,
		ROLE_END
	};
	enum class E_CHAR_POSITION
	{
		POSITION_NULL, POSITION_FRONT, POSITION_MIDDLE, POSITION_BACK,
		POSITION_END
	};
	enum class E_CHAR_ATKTYPE
	{
		ATKTYPE_NULL, ATKTYPE_EXPLOSION, ATKTYPE_PIERCE, ATKTYPE_MYSTERY,
		ATKTYPE_END
	};
	enum class E_CHAR_DFFTYPE
	{
		DFFTYPE_NULL, DFFTYPE_HEAVY, DFFTYPE_LIGHT, DFFTYPE_SPECICAL,
		DFFTYPE_END
	};
	enum class E_CHAR_WEAPONTYPE
	{
		WEAPONTYPE_NULL, WEAPONTYPE_SG, WEAPONTYPE_SMG, WEAPONTYPE_HG, WEAPONTYPE_GL, WEAPONTYPE_SR, WEAPONTYPE_MG, WEAPONTYPE_AR,
		WEAPONTYPE_END
	};
	enum class E_CHAR_MAPBUFF
	{
		MAPBUFF_NULL, MAPBUFF_SS, MAPBUFF_S, MAPBUFF_A, MAPBUFF_B, MAPBUFF_C, MAPBUFF_D,
		MAPBUFF_END
	};
	enum class E_CHAR_SCHOOL
	{
		SCHOOL_NULL, SCHOOL_ABYDOS, SCHOOL_TRINITY, SCHOOL_GEHENNA, SCHOOL_MILLENIUM, SCHOOL_HYAKKIYAKO, // 백귀야행 연합학원
		SCHOOL_END
	};
	enum class E_CHAR_GRADE
	{
		GRADE_NULL, GRADE_FIRST, GRADE_SECOND, GRADE_THIRD,
		GRADE_END, 
	};
	//////////////////////////////////////////////////// end 캐릭터 구조체 

	enum class E_CHAR_SORT
	{
		SORT_LEVEL, SORT_STAR, SORT_TIES, SORT_SCHOOL, SORT_NAME, SORT_EXSKILL_LV, SORT_SKILL_LV, SORT_INCITY_LV, SORT_OUTDOOR_LV, 
		SORT_INDOOR_LV, SORT_ATKTYPE, SORT_DFFTYPE, SORT_ROLE, SORT_WEAPONTYPE, SORT_RANGE, SORT_GETTIME,
		SORT_END 
	};
	enum class E_Pivot
	{
		Pivot_TL, Pivot_TC, Pivot_TR,
		Pivot_CL, Pivot_Center, Pivot_CR,
		Pivot_BL, Pivot_BC, Pivot_BR,
	};

	enum class E_Anchor
	{
		Anchor_TL, Anchor_TC, Anchor_TR,
		Anchor_CL, Anchor_Center, Anchor_CR,
		Anchor_BL, Anchor_BC, Anchor_BR,
	};

	enum class E_VertexOfAngle  /* 꼭짓점 */
	{
		TL, TC , TR,
		CL, C  , CR,
		BL ,BC , BR
	};
}

#endif // __Engine_Enum_H__
